name: "test"

on:
  workflow_call:
    inputs:
      operating-systems:
        type: string
        required: true
        description: "JSON array of operating systems to test on"
      php-versions:
        type: string
        required: true
        description: "JSON array of PHP versions to test on"
      php-extensions:
        type: string
        required: true
        description: "JSON array of PHP extensions"
    secrets:
      geonames-username:
        required: true

jobs:
  validate-user-permissions:
    runs-on: ubuntu-latest
    name: "Validate User Permissions"
    steps:
      - name: "Get user permissions"
        id: userPermissions
        uses: actions-cool/check-user-permission@v2
        with:
          require: "write"
          username: ${{ github.triggering_actor }}
      - name: "Check user permissions"
        if: steps.userPermissions.outputs.check-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have 'write' permission on this repo."
          echo "Originally triggered by ${{ github.actor }}"
          exit 1
      - name: "Audit: user permissions"
        run: |
          echo "Audit: Execution by ${{ github.triggering_actor }} with ${{ steps.userPermissions.outputs.user-permission }} permissions"


  test:
    needs:
      - validate-user-permissions
    env:
      GEONAMES_USERNAME: ${{ secrets.geonames-username }}
    strategy:
      matrix:
        os: ${{ fromJson(inputs.operating-systems) }}
        php: ${{ fromJson(inputs.php-versions) }}
    runs-on: ${{ matrix.os }}
    name: "PHP ${{ matrix.php }} on ${{ matrix.os }}"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }} # must validate user permissions PRIOR to checkout ⚠️
      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ join(fromJson(inputs.php-extensions), ',') }}
      - name: "Composer: Cache packages"
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ matrix.os }}-php-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}
      - name: "Composer: Install dependencies"
        run: composer install --no-progress --no-interaction
      - name: "Execute Unit Tests"
        run: composer aternus:test
